{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "mylang",
  "rules": {
    "source": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_source_item"
      }
    },
    "comment": {
      "type": "PATTERN",
      "value": "\\/\\/.*"
    },
    "_source_item": {
      "type": "SYMBOL",
      "name": "func_def"
    },
    "type_ref": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "builtin_type"
        },
        {
          "type": "SYMBOL",
          "name": "custom_type"
        },
        {
          "type": "SYMBOL",
          "name": "array_type"
        }
      ]
    },
    "builtin_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "bool"
        },
        {
          "type": "STRING",
          "value": "byte"
        },
        {
          "type": "STRING",
          "value": "int"
        },
        {
          "type": "STRING",
          "value": "uint"
        },
        {
          "type": "STRING",
          "value": "long"
        },
        {
          "type": "STRING",
          "value": "ulong"
        },
        {
          "type": "STRING",
          "value": "char"
        },
        {
          "type": "STRING",
          "value": "string"
        }
      ]
    },
    "custom_type": {
      "type": "SYMBOL",
      "name": "identifier"
    },
    "array_type": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "element_type",
          "content": {
            "type": "SYMBOL",
            "name": "type_ref"
          }
        },
        {
          "type": "STRING",
          "value": "array"
        },
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "FIELD",
          "name": "size",
          "content": {
            "type": "SYMBOL",
            "name": "dec"
          }
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "func_signature": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "args",
          "content": {
            "type": "SYMBOL",
            "name": "arg_list"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "of"
                },
                {
                  "type": "FIELD",
                  "name": "return_type",
                  "content": {
                    "type": "SYMBOL",
                    "name": "type_ref"
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "arg_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "arg"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "arg"
              }
            ]
          }
        }
      ]
    },
    "arg": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "of"
                },
                {
                  "type": "FIELD",
                  "name": "type",
                  "content": {
                    "type": "SYMBOL",
                    "name": "type_ref"
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "func_def": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "def"
        },
        {
          "type": "FIELD",
          "name": "signature",
          "content": {
            "type": "SYMBOL",
            "name": "func_signature"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": "end"
        }
      ]
    },
    "_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "if_statement"
        },
        {
          "type": "SYMBOL",
          "name": "while_loop"
        },
        {
          "type": "SYMBOL",
          "name": "until_loop"
        },
        {
          "type": "SYMBOL",
          "name": "repeat_statement"
        },
        {
          "type": "SYMBOL",
          "name": "break_statement"
        },
        {
          "type": "SYMBOL",
          "name": "expression_statement"
        },
        {
          "type": "SYMBOL",
          "name": "block_statement"
        }
      ]
    },
    "if_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "FIELD",
          "name": "condition",
          "content": {
            "type": "SYMBOL",
            "name": "expr"
          }
        },
        {
          "type": "STRING",
          "value": "then"
        },
        {
          "type": "FIELD",
          "name": "consequence",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "else"
                },
                {
                  "type": "FIELD",
                  "name": "alternative",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_statement"
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "while_loop": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "while"
        },
        {
          "type": "FIELD",
          "name": "condition",
          "content": {
            "type": "SYMBOL",
            "name": "expr"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": "end"
        }
      ]
    },
    "until_loop": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "until"
        },
        {
          "type": "FIELD",
          "name": "condition",
          "content": {
            "type": "SYMBOL",
            "name": "expr"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": "end"
        }
      ]
    },
    "repeat_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "body",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "while"
            },
            {
              "type": "STRING",
              "value": "until"
            }
          ]
        },
        {
          "type": "FIELD",
          "name": "condition",
          "content": {
            "type": "SYMBOL",
            "name": "expr"
          }
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "break_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "break"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "expression_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expr"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "block_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "begin"
            },
            {
              "type": "STRING",
              "value": "{"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_statement"
              },
              {
                "type": "SYMBOL",
                "name": "_source_item"
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "end"
            },
            {
              "type": "STRING",
              "value": "}"
            }
          ]
        }
      ]
    },
    "expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "binary_expr"
        },
        {
          "type": "SYMBOL",
          "name": "unary_expr"
        },
        {
          "type": "SYMBOL",
          "name": "grouped_expr"
        },
        {
          "type": "SYMBOL",
          "name": "call_expr"
        },
        {
          "type": "SYMBOL",
          "name": "slice_expr"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "literal"
        }
      ]
    },
    "binary_expr": {
      "type": "PREC_LEFT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "FIELD",
            "name": "left",
            "content": {
              "type": "SYMBOL",
              "name": "expr"
            }
          },
          {
            "type": "FIELD",
            "name": "operator",
            "content": {
              "type": "SYMBOL",
              "name": "_bin_op"
            }
          },
          {
            "type": "FIELD",
            "name": "right",
            "content": {
              "type": "SYMBOL",
              "name": "expr"
            }
          }
        ]
      }
    },
    "unary_expr": {
      "type": "PREC_RIGHT",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "FIELD",
            "name": "operator",
            "content": {
              "type": "SYMBOL",
              "name": "_un_op"
            }
          },
          {
            "type": "FIELD",
            "name": "operand",
            "content": {
              "type": "SYMBOL",
              "name": "expr"
            }
          }
        ]
      }
    },
    "grouped_expr": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "call_expr": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "function",
          "content": {
            "type": "SYMBOL",
            "name": "expr"
          }
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "arguments",
          "content": {
            "type": "SYMBOL",
            "name": "expr_list"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "slice_expr": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "array",
          "content": {
            "type": "SYMBOL",
            "name": "expr"
          }
        },
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "FIELD",
          "name": "ranges",
          "content": {
            "type": "SYMBOL",
            "name": "range_list"
          }
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "range": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "from",
          "content": {
            "type": "SYMBOL",
            "name": "expr"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": ".."
                },
                {
                  "type": "FIELD",
                  "name": "to",
                  "content": {
                    "type": "SYMBOL",
                    "name": "expr"
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "range_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "range"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "range"
              }
            ]
          }
        }
      ]
    },
    "expr_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expr"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "expr"
              }
            ]
          }
        }
      ]
    },
    "literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "bool"
        },
        {
          "type": "SYMBOL",
          "name": "str"
        },
        {
          "type": "SYMBOL",
          "name": "char"
        },
        {
          "type": "SYMBOL",
          "name": "hex"
        },
        {
          "type": "SYMBOL",
          "name": "bits"
        },
        {
          "type": "SYMBOL",
          "name": "dec"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z_0-9]*"
    },
    "str": {
      "type": "PATTERN",
      "value": "\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\""
    },
    "char": {
      "type": "PATTERN",
      "value": "'[^']'"
    },
    "hex": {
      "type": "PATTERN",
      "value": "0[xX][0-9A-Fa-f]+"
    },
    "bits": {
      "type": "PATTERN",
      "value": "0[bB][01]+"
    },
    "dec": {
      "type": "PATTERN",
      "value": "[0-9]+"
    },
    "bool": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "_bin_op": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "+"
        },
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "STRING",
          "value": "*"
        },
        {
          "type": "STRING",
          "value": "/"
        },
        {
          "type": "STRING",
          "value": "%"
        },
        {
          "type": "STRING",
          "value": "=="
        },
        {
          "type": "STRING",
          "value": "!="
        },
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "STRING",
          "value": ">"
        },
        {
          "type": "STRING",
          "value": "<="
        },
        {
          "type": "STRING",
          "value": ">="
        },
        {
          "type": "STRING",
          "value": "&&"
        },
        {
          "type": "STRING",
          "value": "||"
        },
        {
          "type": "STRING",
          "value": "&"
        },
        {
          "type": "STRING",
          "value": "|"
        },
        {
          "type": "STRING",
          "value": "^"
        },
        {
          "type": "STRING",
          "value": "<<"
        },
        {
          "type": "STRING",
          "value": ">>"
        }
      ]
    },
    "_un_op": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "STRING",
          "value": "!"
        },
        {
          "type": "STRING",
          "value": "~"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}